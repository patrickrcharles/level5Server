

@model IEnumerable<mysql_scaffold_dbcontext_test.Models.Highscores>

@{
    ViewData["Title"] = "High Scores";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>Recent scores</h3>
<div>
    @using (Html.BeginForm())
    {
        <div class="form-group">
            find by username, platform, character, level, mode name or version:
            &nbsp;
            @Html.TextBox("SearchString")
            <input type="submit" value="Search" />
        </div>
    }
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.ActionLink("Date", "Index", new { sortOrder = ViewBag.DateSortParm })
            </th>
            <th>
                @Html.ActionLink("Hardcore", "Index", new { sortOrder = ViewBag.HardcoreSortParm })
            </th>
            <th>
                @Html.ActionLink("UserName", "Index", new { sortOrder = ViewBag.UsernameSortParm })
            </th>
            <th>
                @Html.ActionLink("Platform", "Index", new { sortOrder = ViewBag.PlatformSortParm })
            </th>
            <th>
                @Html.ActionLink("Mode Name", "Index", new { sortOrder = ViewBag.ModeSortParm })
            </th>
            <th>
                @Html.ActionLink("Character", "Index", new { sortOrder = ViewBag.CharacterSortParm })
            </th>
            <th>
                @Html.ActionLink("Level", "Index", new { sortOrder = ViewBag.LevelSortParm })
            </th>
            <th>
                @Html.ActionLink("Version", "Index", new { sortOrder = ViewBag.VersionSortParam })
            </th>
            <th>
                @Html.ActionLink("Time", "Index", new { sortOrder = ViewBag.TimeSortParm })
            </th>
            <th>
                @Html.ActionLink("Difficulty", "Index", new { sortOrder = ViewBag.DifficultySortParm })
            </th>
            <th>
                @Html.ActionLink("Enemies Killed", "Index", new { sortOrder = ViewBag.EnemieskilledSortParm })
            </th>
            <th>
                @Html.ActionLink("Total Points", "Index", new { sortOrder = ViewBag.TotalPointsSortParm })
            </th>
            <th>
                @Html.ActionLink("Longest Shot", "Index", new { sortOrder = ViewBag.LongestShotSortParm })
            </th>
            <th>
                @Html.ActionLink("Total Distance", "Index", new { sortOrder = ViewBag.TotalDistanceSortParm })
            </th>
            <th>
                @Html.ActionLink("Shots Made", "Index", new { sortOrder = ViewBag.MaxShotMadeSortParm })
            </th>
            <th>
                @Html.ActionLink("Shots Att", "Index", new { sortOrder = ViewBag.MaxShotAttSortParm })
            </th>
            <th>
                @Html.ActionLink("Consecutive Shots", "Index", new { sortOrder = ViewBag.ConsecutiveShotsSortParm })
            </th>
            <th>
                @Html.ActionLink("Two Made", "Index", new { sortOrder = ViewBag.TwoMadeSortParm })
            </th>
            <th>
                @Html.ActionLink("Two Att", "Index", new { sortOrder = ViewBag.TwoAttSortParm })
            </th>
            <th>
                @Html.ActionLink("Three Made", "Index", new { sortOrder = ViewBag.ThreeMadeSortParm })
            </th>
            <th>
                @Html.ActionLink("Three Att", "Index", new { sortOrder = ViewBag.ThreeAttMadeSortParm })
            </th>
            <th>
                @Html.ActionLink("Four Made", "Index", new { sortOrder = ViewBag.FourMadeSortParm })
            </th>
            <th>
                @Html.ActionLink("Four Att", "Index", new { sortOrder = ViewBag.FourAttSortParm })
            </th>
            <th>
                @Html.ActionLink("Seven Made", "Index", new { sortOrder = ViewBag.SevenMadeSortParm })
            </th>
            <th>
                @Html.ActionLink("Seven Att", "Index", new { sortOrder = ViewBag.SevenAttSortParm })
            </th>
            <th>
                @Html.ActionLink("Bonus Points", "Index", new { sortOrder = ViewBag.BonusPointsSortParm })
            </th>
            <th>
                @Html.ActionLink("MoneyBall Made", "Index", new { sortOrder = ViewBag.MoneyBallMadeSortParm })
            </th>
            <th>
                @Html.ActionLink("MoneyBall Att", "Index", new { sortOrder = ViewBag.MoneyBallAttSortParm })
            </th>
            <th>
                @Html.ActionLink("Traffic Enabled", "Index", new { sortOrder = ViewBag.TrafficSortParm })
            </th>
            <th>
                @Html.ActionLink("Enemies Enabled", "Index", new { sortOrder = ViewBag.EnemiesSortParm })
            </th>
            <th>
                @Html.ActionLink("Sniper Enabled", "Index", new { sortOrder = ViewBag.SniperSortParm })
            </th>
            <th>
                @Html.ActionLink("Sniper Mode", "Index", new { sortOrder = ViewBag.SniperModeSortParm })
            </th>
            <th>
                @Html.ActionLink("SniperMode Name", "Index", new { sortOrder = ViewBag.SniperModeNameSortParm })
            </th>
            <th>
                @Html.ActionLink("Sniper Hits", "Index", new { sortOrder = ViewBag.SniperHitsSortParm })
            </th>
            <th>
                @Html.ActionLink("Sniper Shots", "Index", new { sortOrder = ViewBag.SniperShotsSortParm })
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Date)
                </td>

                @if (item.HardcoreEnabled == 1)
                {
                    <td>yes</td>
                }
                else
                {
                    <td>no</td>
                }
                <td>
                    @Html.DisplayFor(modelItem => item.UserName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Platform)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ModeName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Character)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Level)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Version)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Time)
                </td>
                @if (item.Difficulty >= 0)
                {
                    if(item.Difficulty == 0) { <td>easy</td>}
                    if(item.Difficulty == 1) { <td>normal</td>}
                    if(item.Difficulty == 2) { <td>hardcore</td>}
                }
                <td>
                    @Html.DisplayFor(modelItem => item.EnemiesKilled)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TotalPoints)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LongestShot)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TotalDistance)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MaxShotMade)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MaxShotAtt)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ConsecutiveShots)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TwoMade)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TwoAtt)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ThreeMade)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ThreeAtt)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FourMade)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FourAtt)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SevenMade)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SevenAtt)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BonusPoints)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MoneyBallMade)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MoneyBallAtt)
                </td>
                @if (item.TrafficEnabled == 1)
                {
                    <td>yes</td>
                }
                else
                {
                    <td>no</td>
                }
                @if (item.EnemiesEnabled == 1)
                {
                    <td>yes</td>
                }
                else
                {
                    <td>no</td>
                }
                @if (item.SniperEnabled == 1)
                {
                    <td>yes</td>
                }
                else
                {
                    <td>no</td>
                }
                <td>
                    @Html.DisplayFor(modelItem => item.SniperMode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SniperModeName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SniperHits)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SniperShots)
                </td>
            </tr>
        }
    </tbody>
</table>
